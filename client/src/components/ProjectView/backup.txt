          {/* <TextField
              margin="dense"
              label="Nombre del Proyecto"
              type="text"
              fullWidth
              value={project.projectName}
              disabled />
            <TextField
              margin="dense"
              label="DescripciÃ³n del Proyecto"
              type="text"
              fullWidth
              value={objectives.objetivo}
              disabled />
            <div className="date-fields">
              <TextField
                margin="dense"
                label="Fecha de Inicio"
                type="date"
                InputLabelProps={{ shrink: true }}
                value={project.startDate}
                disabled />
              <TextField
                margin="dense"
                label="Fecha de Fin"
                type="date"
                InputLabelProps={{ shrink: true }}
                value={project.endDate}
                disabled />
            </div>
            <Table>
              <TableHead>
                <TableRow>
                  <TableCell>Recurso</TableCell>
                  <TableCell>Rol</TableCell>
                  <TableCell>Acciones</TableCell>
                </TableRow>
              </TableHead>
              <TableBody>
                {resources.map((member, index) => (
                  <TableRow key={index}>
                    <TableCell>
                      <Autocomplete
                        options={resources}
                        getOptionLabel={(option) => option.nombre_completo}
                        renderInput={(params) => <TextField {...params} label="Recurso" />}
                        value={member.resource}
                        onChange={(event, newValue) => handleResourceChange(index, newValue)} />
                    </TableCell>
                    <TableCell>
                      <Select
                        multiple
                        value={member.roles}
                        onChange={(event) => handleRoleChange(index, event)}
                        renderValue={(selected) => selected.join(', ')}
                      >
                        {roles.map((role, roleIndex) => (
                          <MenuItem key={roleIndex} value={role}>
                            {role}
                          </MenuItem>
                        ))}
                      </Select>
                    </TableCell>
                    <TableCell>
                      <IconButton onClick={() => handleRemoveMember(index)}>
                        <RemoveCircleOutline />
                      </IconButton>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            <div>
              <h2>Actividades</h2>
              <div>
                <TextField
                  margin="dense"
                  label="Nueva Actividad"
                  type="text"
                  value={newActivity}
                  onChange={(e) => setNewActivity(e.target.value)} />
                <Button onClick={handleAddActivity}>Agregar Actividad</Button>
              </div>
              <ul>
                {activities.map((activity, index) => (
                  <li key={index}>
                    {activity}
                    <IconButton onClick={() => handleRemoveActivity(index)}>
                      <RemoveCircleOutline />
                    </IconButton>
                  </li>
                ))}
              </ul>
            </div>
            <Button onClick={handleSaveChanges}>Guardar Cambios</Button> */}